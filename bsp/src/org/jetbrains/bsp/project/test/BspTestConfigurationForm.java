package org.jetbrains.bsp.project.test;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;

public class BspTestConfigurationForm {
	JPanel mainPanel;
	JComboBox<SelectionMode> selectionModeCombobox;
	private JTextField testClassName;
	private JPanel testClassFormWrapper;


	public BspTestConfigurationForm() {
		$$$setupUI$$$();
		for (SelectionMode sm : SelectionMode.values())
			selectionModeCombobox.addItem(sm);
		selectionModeCombobox.addItemListener(e -> {
			if (e.getStateChange() == ItemEvent.SELECTED)
				onSelectModeChanged((SelectionMode) e.getItem());
		});
	}

	private void onSelectModeChanged(SelectionMode current) {
		switch (current) {
			case ALL_IN_PROJECT:
				testClassFormWrapper.setVisible(false);
				break;
			case CLASS:
				testClassFormWrapper.setVisible(true);
				break;
		}
	}

	public void apply(BspTestRunConfiguration conf) {
		selectionModeCombobox.setSelectedItem(conf.testSelection());
		onSelectModeChanged(conf.testSelection());
		testClassName.setText(conf.getTestClassName());
	}


	enum SelectionMode {
		ALL_IN_PROJECT("All in project"),
		CLASS("Scala class");

		String displayText;

		SelectionMode(String n) {
			this.displayText = n;
		}

		@Override
		public String toString() {
			return displayText;
		}
	}

	public SelectionMode getTestSelectionMode() {
		return (SelectionMode) selectionModeCombobox.getSelectedItem();
	}

	public String getTestClassName() {
		return testClassName.getText();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		mainPanel = new JPanel();
		mainPanel.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
		final Spacer spacer1 = new Spacer();
		mainPanel.add(spacer1, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		final JLabel label1 = new JLabel();
		label1.setText("Test kind:");
		mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		selectionModeCombobox = new JComboBox();
		mainPanel.add(selectionModeCombobox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
		testClassFormWrapper = new JPanel();
		testClassFormWrapper.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
		mainPanel.add(testClassFormWrapper, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label2 = new JLabel();
		label2.setText("Test class:");
		testClassFormWrapper.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		testClassName = new JTextField();
		testClassFormWrapper.add(testClassName, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return mainPanel;
	}


}
